## Configuration
<hr style="width:100%;border-bottom:3px solid black;">

For many simple use-cases, the k8s-tools suite only wants the familiar environment variables that your tools require, and in particular things like `KUBECONFIG`, `AWS_PROFILE` are inherited as usual from the calling environment.  

Although in practice most things have defaults, each component of the k8s-tools suite supports some kind of configuration injection that might be needed for advanced use-cases.  Below you can find sections for each of   [k8s-tools.yml](#k8s-tools.yml), [k8s.mk](#k8s.mk), and [compose.mk](#compose.mk) that describe the relevant environment variables.

In a few cases and hopefully for good reasons, **configuration might sometimes involve editing some part of the k8s-tools suite in-place.**  For example,  `k8s-tools.yml` needs to specify file volumes, and while it does share `KUBECONFIG` by default, sharing directories like `~/.aws` and `~/.ssh` are commented by default, and users must explicitly opt-in.  As another example, editing the particulars of [the embedded TUI]({{mkdocs.site_relative_url}}/compose.mk#embedded-tui) should not be necessary, but is easily done if you're willing to reach into [`compose.mk` source]({{github.repo_url}}/tree/master/compose.mk).  See also [this discussion of forking]({{mkdocs.site_relative_url}}/integration#forking) included as part of the [integration docs]({{mkdocs.site_relative_url}}/integration)

### Container Versions 
<hr style="width:100%;border-bottom:3px solid black;">

Here's a list of version defaults in `k8s-tools.yml` currently, all of which can be overridden by setting an environment variable.  

{{bash("./k8s.mk k8s-tools.versions.table")}}

See [the toolbox]({{mkdocs.site_relative_url}}/toolbox) page for more specifics on the tool containers.

### Docker Config 
<hr style="width:100%;border-bottom:3px solid black;">

The k8s-tools.yml compose file is structured to allow overrides of the base container versions, as seen in the last section.  It additionally ships with support for the following environment variables that help to control docker:

* `DOCKER_HOST_WORKSPACE`
* `DOCKER_UID`
* `DOCKER_GID`
* `DOCKER_UGNAME`

These help to configure behaviour for certain edge-cases, and since some attempt is made to detect reasonable values for both OSX and linux, setting them manually isn't usually recommended.  These values control the setup for volume-mounts with DIND, and a setting up default user in case of root-by-default containers, and can help to fix the frequently encountered "owned by root user" problem after using tool containers.
<hr style="width:100%;border-bottom:3px solid black;">
